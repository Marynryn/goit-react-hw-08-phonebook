{"version":3,"file":"static/js/242.76801e90.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ListContacts/ListContact.module.css?e2fd","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ListContacts/ListContacts.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"decor\":\"Filter_decor__TPxRc\",\"form_left_decoration\":\"Filter_form_left_decoration__WDJw+\",\"form_right_decoration\":\"Filter_form_right_decoration__h1rKU\",\"circle\":\"Filter_circle__+mvck\",\"form-inner\":\"Filter_form-inner__q22k2\",\"form_inner\":\"Filter_form_inner__ruUZk\",\"button_submit\":\"Filter_button_submit__FmQOs\"};","import { useDispatch } from \"react-redux\";\nimport { addFilter } from \"store/contactsreducer\";\nimport css from \"./Filter.module.css\"\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    const filter = event.currentTarget.value;\n    dispatch(addFilter(filter));\n\n  };\n  return (\n    <div className={css.decor}>\n      <div className={css.form_left_decoration}></div>\n      <div className={css.form_right_decoration}></div>\n      <div className={css.circle}></div>\n      <div className={css.form_inner}>\n        <h3 style={{ fontSize: 30 }}>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n\n          onChange={changeFilter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /></div>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"decor\":\"Form_decor__bkfkm\",\"form_left_decoration\":\"Form_form_left_decoration__Jepfi\",\"form_right_decoration\":\"Form_form_right_decoration__wqbKj\",\"circle\":\"Form_circle__z5k7Y\",\"form-inner\":\"Form_form-inner__0j1PQ\",\"form_inner\":\"Form_form_inner__pFgSV\",\"button_submit\":\"Form_button_submit__jqVlS\"};","\nimport { nanoid } from 'nanoid';\nimport css from './Form.module.css';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectGetContacts } from 'store/selectors';\nimport { postContact } from 'store/operations';\n\nexport default function Form() {\n  const contacts = useSelector(selectGetContacts)\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formatPhone = phone => {\n      return phone.replace(/(\\d{3})(\\d{2})(\\d{2})/, `$1-$2-$3`);\n    };\n    const contact = {\n\n      name: form.elements.name.value,\n      number: formatPhone(form.elements.number.value),\n\n    };\n    const isContactExists = contacts.some(\n      contact => contact.name === form.elements.name.value\n    );\n    if (isContactExists) {\n      alert(`${form.elements.name.value} is already in contacts.`);\n    } else {\n\n      dispatch(postContact(contact));\n    }\n    form.reset();\n  };\n\n  return (\n    <div>\n      <div className=\"form\">\n        <form className={css.decor}\n          onSubmit={handleSubmit}\n        >\n          <div className={css.form_left_decoration}></div>\n          <div className={css.form_right_decoration}></div>\n          <div className={css.circle}></div>\n          <div className={css.form_inner}>\n            <label htmlFor={nameId} className={css.label}>\n              <h2 className={css.form_name}>Name</h2>\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                id={nameId}\n              />\n            </label>\n            <label htmlFor={numberId} className={css.label_number}>\n              <h2 className={css.form_number}>Number</h2>\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\n                id={numberId}\n                required\n              />\n            </label>\n            <button className={css.button_submit} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"button_delete\":\"Contact_button_delete__GFYHM\",\"list\":\"Contact_list__4ja4z\"};","import css from '../Contact/Contact.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../store/operations';\n\nimport { selectVisibleContacts } from '../../store/selectors';\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {filterName.map((contact, createAt) => (\n        <li key={createAt} className={css.contact}>\n          {contact.name} <br /> {contact.number}{' '}\n          <button\n            type=\"button\"\n            className={css.button_delete}\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n};\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListContact_list__VHyc4\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ColorRing } from \"react-loader-spinner\"\nimport css from \"./Loader.module.css\"\n\n\nexport const Loader = () => {\n\n    return (\n        <div className={css.loader}>\n            <ColorRing\n                visible={true}\n                height=\"150\"\n                width=\"150\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n            /></div>\n    )\n}\n\n","import Contact from 'components/Contact/Contact';\nimport { selectIsLoading } from 'store/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from \"./ListContact.module.css\"\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../store/operations';\n\nexport const ListContacts = () => {\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const loading = useSelector(selectIsLoading)\n\n\n  return (<div className={css.list}>\n    {loading ? <Loader /> : <Contact />\n    }</div>)\n\n\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"header1\":\"Contacts_header1__Q0ECm\",\"header2\":\"Contacts_header2__iOZfQ\"};","import Filter from \"components/Filter/Filter\";\nimport Form from \"components/Form/Form\";\nimport { ListContacts } from \"components/ListContacts/ListContacts\";\nimport css from \"./Contacts.module.css\"\nconst Contacts = () => {\n\n\n    return (\n        <div>\n            <h1 className={css.header1}>Phonebook</h1>\n            <Form />\n            <h2 className={css.header2}>Contacts</h2>\n            <Filter />\n            <ListContacts />\n        </div >\n\n    )\n}\n\nexport default Contacts;"],"names":["dispatch","useDispatch","_jsxs","className","css","children","_jsx","style","fontSize","type","name","onChange","event","filter","currentTarget","value","addFilter","pattern","title","required","Form","contacts","useSelector","selectGetContacts","nameId","nanoid","numberId","onSubmit","preventDefault","phone","form","contact","elements","number","replace","isContactExists","some","alert","concat","postContact","reset","htmlFor","id","filterName","selectVisibleContacts","map","createAt","onClick","deleteContact","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ListContacts","useEffect","fetchContacts","loading","selectIsLoading","Contact","Filter"],"sourceRoot":""}